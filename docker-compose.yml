name: saas-template

services:
  st-api:
    container_name: st-api
    depends_on:
      - st-services
      - st-main
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile.dev
    command: pnpm start:debug api
    env_file:
      - ./apps/api/.env
    volumes:
      - ./apps/api:/app/apps/api
      - ./libs:/app/libs
      - ./protos:/app/protos
    ports:
      - 9231:9229
    networks:
      - st-network

  st-services:
    container_name: st-services
    depends_on:
      - st-rabbitmq
      - st-postgres
      - st-permitio
    build:
      context: .
      dockerfile: ./apps/services/Dockerfile.dev
    command: pnpm start:debug services
    env_file:
      - ./apps/services/.env
    environment:
      RABBIT_MQ_URL: "amqp://admin:password@st-rabbitmq/"
      DB_CONNECTION_STRING: "postgresql://postgres:password@st-postgres/database"
    volumes:
      - ./apps/services:/app/apps/services
      - ./libs:/app/libs
      - ./protos:/app/protos
    ports:
      - 9230:9229
    networks:
      - st-network
  
  st-main:
    container_name: st-main
    depends_on:
      - st-rabbitmq
      - st-postgres
      - st-services
    build:
      context: .
      dockerfile: ./apps/main/Dockerfile.dev
    command: pnpm start:debug main
    env_file:
      - ./apps/main/.env
    environment:
      RABBIT_MQ_URL: "amqp://admin:password@st-rabbitmq/"
      DB_CONNECTION_STRING: "postgresql://postgres:password@st-postgres/database"
    volumes:
      - ./apps/main:/app/apps/main
      - ./libs:/app/libs
      - ./protos:/app/protos
    ports:
      - 9229:9229
    networks:
      - st-network
  
  # region Cloud services
  st-rabbitmq:
    container_name: st-rabbitmq
    image: rabbitmq:4-management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - 5672:5672
      - 15672:15672
    expose:
      - 5672
      - 15672
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
      - rabbitmqlog:/var/log/rabbitmq
    networks:
      - st-network

  st-postgres:
    container_name: st-postgres
    image: postgres:17
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_DB: database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - st-network

  st-nginx:
    container_name: st-nginx
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    depends_on:
      - st-api
    networks:
      - st-network
  
  st-ngrok:
    container_name: st-ngrok
    image: ngrok/ngrok:alpine
    restart: unless-stopped
    env_file:
      - ./.env
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    ports:
      - 4040:4040
    depends_on:
      - st-nginx
    networks:
      - st-network
  
  st-permitio:
    container_name: st-permitio
    image: permitio/pdp-v2:latest
    restart: always
    env_file:
      - ./.env
    ports:
      - 7766:7000
    networks:
      - st-network
  
  # endregion

volumes:
  # region Cloud services
  pgdata:
  rabbitmqdata:
  rabbitmqlog:
  # endregion

networks:
  st-network:
    driver: bridge