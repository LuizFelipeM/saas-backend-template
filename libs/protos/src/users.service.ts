// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v3.21.12
// source: protos/src/users.service.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "services";

export interface UserWebhookRequest {
}

export interface UserWebhookResponse {
}

export const SERVICES_PACKAGE_NAME = "services";

export interface UsersServiceClient {
  processEvent(request: UserWebhookRequest, ...rest: any): Observable<UserWebhookResponse>;
}

export interface UsersServiceController {
  processEvent(
    request: UserWebhookRequest,
    ...rest: any
  ): Promise<UserWebhookResponse> | Observable<UserWebhookResponse> | UserWebhookResponse;
}

export function UsersServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["processEvent"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("UsersService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("UsersService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const USERS_SERVICE_NAME = "UsersService";
