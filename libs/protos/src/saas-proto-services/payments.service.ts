// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v3.21.12
// source: saas-proto-services/payments.service.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "services";

export interface PaymentWebhookRequest {
}

export interface PaymentWebhookResponse {
}

export const SERVICES_PACKAGE_NAME = "services";

export interface PaymentsServiceClient {
  processEvent(request: PaymentWebhookRequest, ...rest: any): Observable<PaymentWebhookResponse>;
}

export interface PaymentsServiceController {
  processEvent(
    request: PaymentWebhookRequest,
    ...rest: any
  ): Promise<PaymentWebhookResponse> | Observable<PaymentWebhookResponse> | PaymentWebhookResponse;
}

export function PaymentsServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["processEvent"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("PaymentsService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("PaymentsService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const PAYMENTS_SERVICE_NAME = "PaymentsService";
