// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v3.21.12
// source: proto-domain/example.service.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "domain";

export interface ExampleRequest {
  name: string;
}

export interface ExampleResponse {
  message: string;
}

export const DOMAIN_PACKAGE_NAME = "domain";

export interface ExampleServiceClient {
  getExample(request: ExampleRequest, ...rest: any): Observable<ExampleResponse>;
}

export interface ExampleServiceController {
  getExample(
    request: ExampleRequest,
    ...rest: any
  ): Promise<ExampleResponse> | Observable<ExampleResponse> | ExampleResponse;
}

export function ExampleServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getExample"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("ExampleService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("ExampleService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const EXAMPLE_SERVICE_NAME = "ExampleService";
